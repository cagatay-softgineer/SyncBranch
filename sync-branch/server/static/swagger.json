{
  "swagger": "2.0",
  "info": {
    "title": "SyncBranch API",
    "description": "API documentation for SyncBranch project.",
    "version": "1.0.0"
  },
  "host": "127.0.0.1:5000",
  "basePath": "/",
  "schemes": ["http", "https"],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "parameters": [
          {
            "name": "username",
            "in": "body",
            "description": "The username for the new user.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "example_user"
            }
          },
          {
            "name": "email",
            "in": "body",
            "description": "The email address of the user.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "example@example.com"
            }
          },
          {
            "name": "password",
            "in": "body",
            "description": "The password for the new user.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "secure_password"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User registered successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Logs in and returns an access token",
        "parameters": [
          {
            "name": "login_info",
            "in": "body",
            "description": "The username and password of the user.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "example_user"
                },
                "password": {
                  "type": "string",
                  "example": "secure_password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Access token generated",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "example": "<jwt_token>"
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/profile/view": {
      "get": {
        "summary": "Retrieves the profile of the authenticated user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile fetched successfully",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "example_user"
                },
                "email": {
                  "type": "string",
                  "example": "example@example.com"
                },
                "spotify_user_id": {
                  "type": "string",
                  "example": "spotify123"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/profile/update": {
      "put": {
        "summary": "Updates the profile of the authenticated user",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "description": "The new email of the user.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "new_email@example.com"
            }
          },
          {
            "name": "spotify_user_id",
            "in": "body",
            "description": "The new Spotify user ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "new_spotify_id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Profile updated successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/messaging/send": {
      "post": {
        "summary": "Sends a message to another user",
        "parameters": [
          {
            "name": "recipient",
            "in": "body",
            "description": "The recipient's username",
            "required": true,
            "schema": {
              "type": "string",
              "example": "recipient_user"
            }
          },
          {
            "name": "message",
            "in": "body",
            "description": "The message content",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Hello!"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Message sent successfully"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/messaging/retrieve": {
      "get": {
        "summary": "Retrieves messages for the authenticated user",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer",
            "default": 1,
            "example": 1
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Messages per page",
            "required": false,
            "type": "integer",
            "default": 10,
            "example": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Messages retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "messages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "content": {
                        "type": "string",
                        "example": "Hello!"
                      },
                      "sender": {
                        "type": "string",
                        "example": "example_user"
                      },
                      "sent_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T12:00:00"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters"
          }
        }
      }
    },
    "/friendship/send": {
      "post": {
        "summary": "Sends a friendship request to another user",
        "parameters": [
          {
            "name": "receiver_username",
            "in": "body",
            "description": "The receiver's username",
            "required": true,
            "schema": {
              "type": "string",
              "example": "recipient_user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Friendship request sent successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Friendship request sent"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/friendship/respond": {
      "post": {
        "summary": "Responds to a friendship request",
        "parameters": [
          {
            "name": "sender_username",
            "in": "body",
            "description": "The sender's username",
            "required": true,
            "schema": {
              "type": "string",
              "example": "example_user"
            }
          },
          {
            "name": "response",
            "in": "body",
            "description": "Response to the request (accept/reject)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "accept"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Friendship request updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Friendship request accepted"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/friendship/list": {
      "get": {
        "summary": "Lists friendship requests for the authenticated user",
        "responses": {
          "200": {
            "description": "Friendship requests retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "requests": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sender_username": {
                        "type": "string",
                        "example": "example_user"
                      },
                      "status": {
                        "type": "string",
                        "example": "pending"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/table/{table_name}": {
      "get": {
        "summary": "Fetch all records from a specified table",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "table_name",
            "in": "path",
            "description": "The table name to fetch records from",
            "required": true,
            "type": "string",
            "example": "users"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched records",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "column1": {
                    "type": "string",
                    "example": "value1"
                  },
                  "column2": {
                    "type": "string",
                    "example": "value2"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid table name"
          }
        }
      }
    },
    "/api/query": {
      "post": {
        "summary": "Execute a custom SQL query",
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "The SQL query to execute",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "query": {
                  "type": "string",
                  "example": "SELECT top 5 * FROM dbo.AllMatches('xyypabyfrp3z0le7niauo8s0l') ORDER BY final_match_rate_percentage DESC;"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Query executed successfully",
            "schema": {
              "type": "object",
              "properties": {
                "column1": {
                  "type": "string",
                  "example": "value1"
                },
                "column2": {
                  "type": "string",
                  "example": "value2"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query or database"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "JWT Bearer token"
    },
    "BasicAuth": {
      "type": "basic",
      "description": "Basic Authentication with username and password"
    }
  },
  "security": [
    {
      "Bearer": []
    },
    {
      "BasicAuth": []
    }
  ]
}